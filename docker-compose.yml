version: "3.9"

x-shared-env: &shared-env
  REDIS_URL: redis://redis:6379/0

services:
  api:
    image: "horoscoper"
    restart: unless-stopped
    build: "."
    environment:
      <<: *shared-env
    ports:
      - 8080:8000

  worker:
    image: "horoscoper"
    restart: unless-stopped
    deploy:
      replicas: 4
    build: "."
    command:
      - python
      - -m
      - horoscoper.tasks.infer
    environment:
      <<: *shared-env
  
  redis:
    image: redis:7
    restart: unless-stopped
  
  worker_exporter:
    image: mdawar/rq-exporter:v2.1.0
    restart: unless-stopped
    environment:
      RQ_REDIS_HOST: redis
    depends_on:
      - redis

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: unless-stopped
    volumes:
      - ./etc/config/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    expose:
      - 9090:9090
  
  grafana:
    image: grafana/grafana
    user: '472'
    restart: unless-stopped
    environment:
      GF_INSTALL_PLUGINS: 'grafana-clock-panel,grafana-simple-json-datasource'
    volumes:
      - grafana_data:/var/lib/grafana
      - ./etc/config/grafana/provisioning/:/etc/grafana/provisioning/
    env_file:
      - ./etc/config/grafana/config.monitoring
    ports:
      - 3000:3000
    depends_on:
      - prometheus

volumes:
  prometheus_data:
  grafana_data:
